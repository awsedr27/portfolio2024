<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.portfolio.review.dao.ReviewDao">
	  <select id="selectReview" parameterType="Int" resultType="com.portfolio.review.dto.ReviewDto">
		SELECT 
			review_id,
			order_item_id,
			use_yn,
			rating,
			comment,
			reply,
			create_date,
			modify_date
		FROM review 
		WHERE review_id =#{reviewId}
	  </select>
    <select id="selectReviewList" parameterType="com.portfolio.review.dto.ReviewDto$ReviewListQuery" resultType="com.portfolio.review.dto.ReviewDto$ReviewListResult">
        SELECT 
			r.review_id,
			r.rating,
			r.comment,
			r.reply,
			r.create_date,
			u.nickname
        FROM 
            review r
       	INNER JOIN orderItems oi ON oi.order_item_id =r.order_item_id AND oi.product_id =#{productId}
        INNER JOIN orders o ON o.order_id =oi.order_id
        INNER JOIN users u ON u.user_id =o.user_id 
        WHERE r.use_yn = 'Y'
	    <choose>
	        <when test="sortBy == 'LATEST'">
		        <if test="reviewId != null">
		            AND r.review_id <![CDATA[<]]> #{reviewId}
		        </if>
	           ORDER BY r.create_date DESC, r.review_id DESC
	        </when>
	        <when test="sortBy == 'HIGHRATING'">
		        <if test="rating != null and reviewId != null">
		            AND (r.rating <![CDATA[<]]> #{rating}
		            OR (r.rating = #{rating} AND r.review_id <![CDATA[<]]> #{reviewId}))
		        </if>
	           ORDER BY r.rating DESC, r.review_id DESC
	        </when>
	        <when test="sortBy == 'LOWRATING'">
		        <if test="rating != null and reviewId != null">
		            AND (r.rating <![CDATA[>]]> #{rating}
		            OR (r.rating = #{rating} AND r.review_id <![CDATA[<]]> #{reviewId}))
		        </if>
	           ORDER BY r.rating ASC, r.create_date DESC
	        </when>
	        <when test="sortBy == 'OLDEST'">
		        <if test="reviewId != null">
		            AND r.review_id <![CDATA[>]]> #{reviewId}
		        </if>
	           ORDER BY r.create_date ASC, r.review_id ASC
	        </when>
	    </choose>
        LIMIT #{limit}
    </select>
	<insert id="insertReview" parameterType="com.portfolio.review.dto.ReviewDto$ReviewSaveQuery">
			INSERT INTO review (
				order_item_id,
				rating,
				comment
			) VALUES (
			    #{orderItemId},
			    #{rating},
			    #{comment}
			)
	  </insert>
	  <select id="selectReviewCnt" parameterType="Int" resultType="Int">
        SELECT 
        	COUNT(*)
        FROM 
            review r
        INNER JOIN orderItems oi ON oi.order_item_id =r.order_item_id AND oi.product_id =#{productId}
        WHERE r.use_yn = 'Y'
	  </select>
	  <select id="selectReviewByOrderItemId" parameterType="Int" resultType="com.portfolio.review.dto.ReviewDto">
		SELECT 
			review_id,
			order_item_id,
			use_yn,
			rating,
			comment,
			reply,
			create_date,
			modify_date
		FROM review 
		WHERE order_item_id =#{orderItemId}
	  </select>
   	  <update id="updateReview" parameterType="com.portfolio.review.dto.ReviewDto$ReviewUpdateQuery">
	      UPDATE review
		  SET
	      rating = #{rating},
	      comment = #{comment}
		  WHERE review_id=#{reviewId}
   	  </update>
   	  <update id="deleteReview" parameterType="com.portfolio.review.dto.ReviewDto$ReviewDeleteQuery">
	      UPDATE review
		  SET
		  use_yn=#{useYn}
		  WHERE review_id=#{reviewId}
   	  </update>
</mapper>